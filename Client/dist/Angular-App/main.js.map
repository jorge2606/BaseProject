{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_helpers/error.interceptor.ts","webpack:///./src/app/_helpers/fake-backend.ts","webpack:///./src/app/_helpers/index.ts","webpack:///./src/app/_helpers/jwt.interceptor.ts","webpack:///./src/app/_models/register.ts","webpack:///./src/app/_models/role-claim-permission.ts","webpack:///./src/app/_models/roles.ts","webpack:///./src/app/_models/update-role-claim-permission.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/role.service.ts","webpack:///./src/app/_services/roles-permissions.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app-routes.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.ts","webpack:///./src/app/modals/modals.component.html","webpack:///./src/app/modals/modals.component.ts","webpack:///./src/app/navar/navar.component.css","webpack:///./src/app/navar/navar.component.html","webpack:///./src/app/navar/navar.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/roles/create/create.component.css","webpack:///./src/app/roles/create/create.component.html","webpack:///./src/app/roles/create/create.component.ts","webpack:///./src/app/roles/roles-permissions/roles-permissions.component.css","webpack:///./src/app/roles/roles-permissions/roles-permissions.component.html","webpack:///./src/app/roles/roles-permissions/roles-permissions.component.ts","webpack:///./src/app/roles/roles.component.css","webpack:///./src/app/roles/roles.component.html","webpack:///./src/app/roles/roles.component.ts","webpack:///./src/app/users/createuser/createuser.component.css","webpack:///./src/app/users/createuser/createuser.component.html","webpack:///./src/app/users/createuser/createuser.component.ts","webpack:///./src/app/users/modifyuser/modifyuser.component.css","webpack:///./src/app/users/modifyuser/modifyuser.component.html","webpack:///./src/app/users/modifyuser/modifyuser.component.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n\r\n    ifLogged(){\r\n        let result : boolean = false;\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            result = true;\r\n        } \r\n        return result;       \r\n    }\r\n}","import { AuthenticationService } from './../_services/authentication.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            return throwError(err);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let testUser = { id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User' };\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null).pipe(mergeMap(() => {\r\n\r\n            // authenticate\r\n            if (request.url.endsWith('/api/User/Auth') && request.method === 'POST') {\r\n                if (request.body.username === testUser.username && request.body.password === testUser.password) {\r\n                    // if login details are valid return 200 OK with a fake jwt token\r\n                    let body = {\r\n                        id: testUser.id,\r\n                        username: testUser.username,\r\n                        firstName: testUser.firstName,\r\n                        lastName: testUser.lastName,\r\n                        token: 'fake-jwt-token'\r\n                    };\r\n                    return of(new HttpResponse({ status: 200, body }));\r\n                } else {\r\n                    // else return 400 bad request\r\n                    return throwError({ error: { message: 'Username or password is incorrect' } });\r\n                }\r\n            }\r\n\r\n            // get users\r\n            if (request.url.endsWith('/api/User/') && request.method === 'GET') {\r\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    return of(new HttpResponse({ status: 200, body: [testUser] }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorised' } });\r\n                }\r\n            }\r\n\r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n            \r\n        }))\r\n\r\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n        .pipe(materialize())\r\n        .pipe(delay(500))\r\n        .pipe(dematerialize());\r\n    }\r\n}\r\n\r\nexport let fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","﻿export * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './fake-backend';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class Register{\r\n    id : number;\r\n    dni : number;\r\n    email : string;\r\n    phoneNumber : number;\r\n    userName : string;\r\n    password : string;\r\n}","export class RoleClaimPermission {\n    text : string;\n    value : string;\n    checked : boolean;\n    children : RoleClaimPermission[];\n}\n","export class Roles{\r\n    id : string;\r\n    name : String;\r\n}\r\n\r\nexport class RoleUserDto{\r\n    rolId : number;\r\n    userId : number;\r\n}","import { RoleClaimPermission } from \"./role-claim-permission\";\n\nexport class UpdateRoleClaimPermission {\n    id : string;\n    Claims : RoleClaimPermission[];\n}\n","import { Login } from './../login/login';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    login(user: Login) {\r\n        return this.http.post<any>('http://localhost:63098/api/User/Auth', user)\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                }\r\n                return user;\r\n            }));\r\n    }\r\n    \r\n    saveToken = user => {\r\n        // login successful if there's a jwt token in the response\r\n        if (user && user.token) {\r\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n        }\r\n        return user;\r\n    };\r\n       \r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Roles } from '../_models/roles';\nimport { rolesBelongUser } from '../users/users';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(){\n    return this.http.get<rolesBelongUser[]>(\"http://localhost:63098/api/Role/getAll\");\n  }\n\n  getAllRoles(){\n    return this.http.get<Roles>(\"http://localhost:63098/api/Role/AllRoles\");\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UpdateRoleClaimPermission } from '../_models/update-role-claim-permission';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesPermissionsService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllRoleClaims(id: string) {\n    return this.http.get<any[]>('http://localhost:63098/api/Role/getallClaims?id=' + id);\n  }\n\n  saveRoleClaims(model: UpdateRoleClaimPermission) {\n    this.http.put('http://localhost:63098/api/Role/UpdateClaims/', model).subscribe(\n      data => {\n\n      },\n      error => {\n        console.log(\"Error\", error);\n      }\n    );\n  }\n}\n","import { Register } from './../_models/register';\r\nimport { RoleUserDto } from './../_models/roles';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { User, modifyUser, createUser } from '../users/users';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient, private authenticationService : AuthenticationService) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>('http://localhost:63098/api/User/getall');\r\n    }\r\n\r\n    getPaginator(page: number) {\r\n        return this.http.get<any>('http://localhost:63098/api/User/page/' + page);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get<modifyUser>('http://localhost:63098/api/User/getbyid/' + id);\r\n    }\r\n\r\n    updateUsers(user: User) : Observable<any> {\r\n        return this.http.put('http://localhost:63098/api/User/', user);\r\n    }\r\n\r\n    createWithObjectUser(user: createUser): Observable<any> {\r\n        return this.http.post('http://localhost:63098/api/User/', user)\r\n        .pipe(\r\n            map(this.authenticationService.saveToken),\r\n            catchError(error => this.handleError(error))\r\n          );\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        return this.http.delete('http://localhost:63098/api/User/' + id);\r\n    }\r\n\r\n    register(user: Register): Observable<any> {\r\n        return this.http.post<any>('http://localhost:63098/api/User/register', user)\r\n        .pipe(\r\n            map(this.authenticationService.saveToken),\r\n            catchError(error => this.handleError(error))\r\n          );\r\n    }\r\n    \r\n    handleError(err : any){\r\n        return throwError(err);\r\n    }\r\n\r\n    SaveUserRoles(RoleUserDto: RoleUserDto) {\r\n        this.http.post('http://localhost:63098/api/User/SaveRolUser/', RoleUserDto).subscribe(\r\n            data => {\r\n                console.log(\"POST Request is successful \", data);\r\n            },\r\n            error => {\r\n                console.log(\"Rrror\", error);\r\n            }\r\n        );\r\n    }\r\n}","import { RolesPermissionsComponent } from './roles/roles-permissions/roles-permissions.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { ModifyuserComponent } from './users/modifyuser/modifyuser.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { CreateuserComponent } from './users/createuser/createuser.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UsersComponent } from './users/users.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  //canActivate : Interface that a class can implement to be a guard deciding if a route can be activated.\n  { path: '', component: HomeComponent, canActivate : [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent},\n  { path: 'users', component: UsersComponent, canActivate : [AuthGuard] },\n  { path: 'users/create', component: CreateuserComponent, canActivate : [AuthGuard] },\n  { path: 'update/:id', component: ModifyuserComponent, canActivate : [AuthGuard] },\n  { path: 'update/:id', component: ModifyuserComponent, canActivate : [AuthGuard] },\n\n  { path: 'roles', component: RolesComponent, canActivate : [AuthGuard] },\n  { path: 'roles/permissions/:id', component: RolesPermissionsComponent, canActivate : [AuthGuard] },\n  \n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  exports : [\n    RouterModule\n  ], \n  imports : [\n    RouterModule.forRoot(routes)\n  ]\n})\nexport class AppRoutesModule { }\n","module.exports = \".navarStyle {\\r\\n  font-size : 13px;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n  padding: 8px;\\r\\n}\"","module.exports = \"<div class=\\\"container navarStyle\\\">\\n        <ul *ngIf=\\\"isLogged()\\\">\\n            <app-navar></app-navar>\\n        </ul>\\n        <ul>\\n            <router-outlet class=\\\"navarStyle\\\"></router-outlet>\\n        </ul>\\n</div>\\n\\n\"","import { AuthGuard } from './_guards/auth.guard';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private auth : AuthGuard){}\n isLogged : any;\n  \n  ngOnInit(){\n    this.isLogged = this.auth.ifLogged;\n  }\n}\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CreateuserComponent } from './users/createuser/createuser.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { UsersComponent } from './users/users.component';\nimport { AppRoutesModule } from './app-routes.module';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { JwtInterceptor , ErrorInterceptor} from './_helpers/';\nimport { ModifyuserComponent } from './users/modifyuser/modifyuser.component';\nimport { RegisterComponent } from './register/register.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbdModalContent } from './modals/modals.component';\n//Paginator\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { NavarComponent } from './navar/navar.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { CreateRolesComponent } from './roles/create/create.component';\nimport { TreeviewModule } from 'ngx-treeview';\nimport { RolesPermissionsComponent } from './roles/roles-permissions/roles-permissions.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nlibrary.add(fas);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UsersComponent,\n    CreateuserComponent,\n    HomeComponent,\n    ModifyuserComponent,\n    RegisterComponent,\n    NgbdModalContent,\n    NavarComponent,\n    RolesComponent,\n    CreateRolesComponent,\n    RolesPermissionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutesModule,\n    HttpModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgxPaginationModule,\n    FontAwesomeModule,\n    TreeviewModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n\n    // provider used to create fake backend\n    //fakeBackendProvider    \n  ],\n  entryComponents: [NgbdModalContent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n    Home\\n    \\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n","module.exports = \"\\r\\n.login {\\r\\n    margin : 50px;\\r\\n    background-color: aliceblue;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <div style=\\\"margin-left : 420px;\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\"> \\n\\n            <form class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"LoginForm.form.valid && onSubmit()\\\" #LoginForm=\\\"ngForm\\\">\\n                <input [(ngModel)]=\\\"model.Usuario\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" placeholder=\\\"Usuario\\\">\\n\\n                <div *ngIf=\\\"username.invalid\\\">\\n                    Usuario Incorrecto\\n                </div>\\n                <input [(ngModel)]=\\\"model.Password\\\" class=\\\"form-control\\\"  type=\\\"password\\\" placeholder=\\\"Contraseña\\\" name=\\\"Password\\\" #password=\\\"ngModel\\\">\\n\\n                <div *ngIf=\\\"password.invalid\\\">\\n                    Contraseña Incorrecta\\n                </div>   \\n                       \\n\\n                  <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" [disabled]=\\\"LoginForm.form.invalid\\\" class=\\\"btn btn-primary\\\">\\n                    <fa-icon icon=\\\"sign-in-alt\\\"></fa-icon>\\n                  </button>\\n                  <a class=\\\"btn btn-light\\\" href=\\\"\\\" routerLink=\\\"/register\\\">Registrar</a>\\n               \\n                <div *ngIf=\\\"!LoginForm.form.valid\\\">\\n                      Formulario Incorrecto\\n                </div>\\n              </form>  \\n\\n      </div>\\n  </nav>\\n\\n\"","import { User } from './../users/users';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Login } from './login';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';  \n\n  constructor(private http : HttpClient,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService) { }\n\n    model = new Login();\n\n   // convenience getter for easy access to form fields\n   get f() { return this.loginForm.controls; }\n\n   onSubmit() {\n       //this.addUserPassword();\n       this.submitted = true;\n\n       // stop here if form is invalid\n       //if (this.loginForm.invalid) {\n       //  alert(this.loginForm.invalid);\n       //    return;\n       //}\n\n       this.loading = true;\n       this.authenticationService.login(this.model)\n           .pipe(first())\n           .subscribe(\n               data => {\n                   this.router.navigate([this.returnUrl]);\n               },\n               error => {\n                   this.error = error;\n                   this.loading = false;\n               });\n   }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n          username: ['', Validators.required],\n          Password: ['', Validators.required]\n        });\n        \n        // reset login status\n        this.authenticationService.logout();\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\n    }\n\n}\n","export class Login {\r\n  usuario: string;\r\n  password : string;\r\n}","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">{{Encabezado}}</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>{{Contenido}}!</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.dismiss('Close click')\\\">Close</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"activeModal.close('Close click')\\\">{{GuardaroEliminar}}</button>\\n</div>\\n    \\n\\n\"","import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'ngbd-modal-content',\n  templateUrl: 'modals.component.html'\n})\nexport class NgbdModalContent {\n  @Input() Contenido;\n  @Input() Encabezado;\n  @Input() GuardaroEliminar;\n\n  constructor(public activeModal: NgbActiveModal) {}\n}\n\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg\\\" style=\\\"background-color:black;color: white;\\\">\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n      <div class=\\\"navbar-nav\\\">\\n          <a style=\\\"color: white;\\\" routerLink=\\\"/users\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\">\\n            <fa-icon icon=\\\"users\\\"></fa-icon>\\n          </a>\\n          <!--<a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>-->\\n          <a style=\\\"color: white;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" [routerLink]=\\\"['/roles']\\\">Roles</a>\\n          <a style=\\\"color: white; padding-left: 52rem;\\\" class=\\\"nav-item nav-link active\\\" href=\\\"#\\\" [routerLink]=\\\"['/login']\\\">Cerrar Sesión</a>\\n      </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-navar',\n  templateUrl: './navar.component.html',\n  styleUrls: ['./navar.component.css']\n})\nexport class NavarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container col-4\\\">\\n    <h2>Registrar</h2>\\n    <form (ngSubmit)=\\\"userForm.form.valid && onSubmit()\\\" method=\\\"post\\\" #userForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.dni\\\" #dni=\\\"ngModel\\\" required name=\\\"dni\\\" id=\\\"dni\\\" type=\\\"number\\\"\\n                placeholder=\\\"Dni\\\">\\n            <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"dni.invalid && dni.dirty\\\" class=\\\"alert alert-danger\\\">\\n                Dni Incorrecto\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" required #email=\\\"ngModel\\\" name=\\\"email\\\" type=\\\"text\\\"\\n                placeholder=\\\"email\\\" value=\\\"\\\">\\n        </div>\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"email.dirty && email.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Email Incorrecto\\n        </div>\\n        <div class=\\\"from-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.phoneNumber\\\" required #phoneNumber=\\\"ngModel\\\" name=\\\"phoneNumber\\\"\\n                type=\\\"text\\\" placeholder=\\\"Telefóno\\\" value=\\\"\\\">\\n        </div>\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"phoneNumber.dirty && phoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Telefóno Incorrecto\\n        </div>\\n\\n        <div style=\\\"padding-top : 8px;\\\" class=\\\"from-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" required #password=\\\"ngModel\\\" name=\\\"password\\\" type=\\\"password\\\"\\n                placeholder=\\\"Contraseña\\\" value=\\\"\\\">\\n        </div>\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"password.dirty && password.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Password Incorrecto\\n        </div>\\n\\n        <div class=\\\"form-group\\\" style=\\\"padding-top : 10px;\\\">\\n            <button style=\\\"margin: 15px;\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!userForm.form.valid\\\">Save</button>\\n            <a class=\\\"btn btn-primary\\\" href=\\\"\\\" routerLink=\\\"/login\\\">Login</a>\\n        </div>\\n        \\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"password.dirty && password.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Contraseña con caracteres invalidos\\n        </div>\\n    </form>\\n    <div *ngIf=\\\"userForm.form.invalid && !userForm.form.dirty\\\">\\n        Hay Campos erroneos en el formulario, verifiquelos\\n    </div>\\n    <div>\\n        <ul style=\\\"margin-top : 15px;\\\" *ngIf=\\\"errors.length != 0\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            <li *ngFor=\\\"let error of errors\\\">{{ error.value }}</li>\\n        </ul>\\n    </div>\\n</div>\"","import { Router } from '@angular/router';\nimport { Register } from './../_models/register';\nimport { UserService } from './../_services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Login } from '../login/login';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  model = new Register();\n  errors: any[] = [];\n  login = new Login();\n  loading: boolean;\n  error = '';  \n  constructor(private userService : UserService, private router : Router) { }\n\n  onSubmit(){\n    this.errors = [];\n    this.registerUser();    \n  }\n\n  registerUser(){\n    this.userService.register(this.model).subscribe(\n      result => {\n        this.router.navigate(['Home']);\n      },\n        error => {\n          this.errors = error.error.notifications;\n        }      \n    );\n    console.log(this.model);\n  }\n  \n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container col-4\\\">\\n   <h2>Crear Rol</h2>\\n    <form action=\\\"\\\">\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"descripción\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"descripción\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"descripción\\\">\\n          </div>          \\n        <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success\\\">Crear</button>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-roles',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateRolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navarStyle {\\r\\n    font-size : 13px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    padding-top: 1px;\\r\\n  }\"","module.exports = \"<div class=\\\"col-3\\\">\\n  <ngx-treeview class=\\\"navarStyle\\\" [config]=\\\"config\\\" [items]=\\\"items\\\" (filterChange)=\\\"onFilterChange($event)\\\" \\n  (selectedChange)=\\\"values = $event\\\">\\n  </ngx-treeview>\\n  <button (click)=\\\"save()\\\" style=\\\"margin-top: 25px;\\\" class=\\\"btn btn-success navarStyle\\\">Guardar</button>\\n</div>\\n\"","import { RoleClaimPermission } from './../../_models/role-claim-permission';\nimport { Roles } from './../../_models/roles';\nimport { Component, OnInit } from '@angular/core';\nimport { UpdateRoleClaimPermission } from '../../_models/update-role-claim-permission';\nimport { TreeviewItem, TreeviewConfig } from 'node_modules/ngx-treeview'\nimport { RolesPermissionsService } from '../../_services/roles-permissions.service';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-roles-permissions',\n  templateUrl: './roles-permissions.component.html',\n  styleUrls: ['./roles-permissions.component.css']\n})\nexport class RolesPermissionsComponent implements OnInit {\n\n\n  model: Roles;\n  id : string;\n  constructor(private rolesServices: RolesPermissionsService, private route: ActivatedRoute) { }\n\n  dropdownEnabled = true;\n  items: TreeviewItem[] = [];\n  values: number[];\n  updateRoleClaimPermission: UpdateRoleClaimPermission = new UpdateRoleClaimPermission()\n\n  config = TreeviewConfig.create({\n    hasAllCheckBox: true,\n    hasFilter: true,\n    hasCollapseExpand: true,\n    decoupleChildFromParent: false,\n    maxHeight: 400\n  });\n\n  buttonClasses = [\n    'btn-outline-primary',\n    'btn-outline-secondary',\n    'btn-outline-success',\n    'btn-outline-danger',\n    'btn-outline-warning',\n    'btn-outline-info',\n    'btn-outline-light',\n    'btn-outline-dark'\n  ];\n  buttonClass = this.buttonClasses[0];\n\n  ngOnInit() {\n\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.rolesServices.getAllRoleClaims(this.id).subscribe(claims => {\n      this.items = claims.map(x => new TreeviewItem(x));\n    });\n\n  }\n\n  onFilterChange(value: string) {\n    console.log('filter:', value);\n  }\n\n  mapToRoleClaimPermission(treeViewItem: TreeviewItem) {\n    var roleClaim = new RoleClaimPermission();\n    roleClaim.checked = treeViewItem.checked;\n    roleClaim.text = treeViewItem.text;\n    roleClaim.value = treeViewItem.value;\n    if (treeViewItem.children)\n      roleClaim.children = treeViewItem.children.map(x => this.mapToRoleClaimPermission(x));\n    return roleClaim;\n  }\n\n  save() {\n    \n    let childrensUpdate: UpdateRoleClaimPermission;\n\n    this.updateRoleClaimPermission.id = this.id;\n\n    this.updateRoleClaimPermission.Claims = this.items.map(x => this.mapToRoleClaimPermission(x));\n\n    // this.items.forEach(function(value){\n    //       value.children.forEach(function(value1){\n    //          //childrensUpdate.childrens. = value1.text;\n    //          //childrensUpdate.childrens = value1.value;\n    //     });\n    // });\n    console.log(childrensUpdate);\n    this.rolesServices.saveRoleClaims(this.updateRoleClaimPermission);\n  }\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Roles</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let rol of modelRoles\\\">\\n        <th scope=\\\"row\\\">{{rol.name}}</th>\\n        <th scope=\\\"row\\\"><a routerLink=\\\"/roles/permissions/{{rol.id}}\\\">Permisos</a></th>\\n      </tr>\\n    </tbody>\\n  </table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Roles } from '../_models/roles';\nimport { RoleService } from '../_services/role.service';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n    modelRoles : Roles;\n\n    constructor(private rolesService : RoleService){}\n    ngOnInit(){\n      this.rolesService.getAllRoles().subscribe(x=>\n        this.modelRoles = x\n        );\n    }\n}\n","module.exports = \"\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n  \\r\\n.ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n  \\r\\n.navarStyle {\\r\\n  font-size : 13px;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n  padding-top: 1px;\\r\\n}\\r\\n  \\r\\ninput{\\r\\n  font-size : 13px;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;  \\r\\n}\"","module.exports = \"<div class=\\\"container col-4 navarStyle\\\">\\n    <h2>Nuevo Usuario</h2>\\n    <form (ngSubmit)=\\\"userForm.form.valid && onSubmit()\\\" method=\\\"post\\\" #userForm=\\\"ngForm\\\">\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.dni\\\" #Dni=\\\"ngModel\\\" required name=\\\"Dni\\\" id=\\\"Dni\\\" type=\\\"number\\\" placeholder=\\\"Dni\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"Dni.dirty && Dni.invalid\\\" class=\\\"alert alert-danger\\\">\\n        Dni Incorrecto\\n      </div>\\n\\n      <div  style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.userName\\\" required #Usuario=\\\"ngModel\\\" name=\\\"Usuario\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" value=\\\"\\\">\\n      </div>\\n\\n      <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"Usuario.dirty && Usuario.invalid\\\" class=\\\"alert alert-danger\\\">\\n        Usuario Incorrecto\\n      </div>\\n\\n      <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" required #Password=\\\"ngModel\\\" name=\\\"Password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" value=\\\"\\\">\\n      </div>   \\n\\n      <div class=\\\"form-group\\\" style=\\\"margin-bottom : 0px;\\\">\\n            <div class=\\\"row\\\">\\n                <li *ngFor=\\\"let rol of model.rolesUser\\\" style=\\\"list-style:none\\\">\\n                    <div class=\\\"col\\\">\\n                        <input type=\\\"checkbox\\\" name=\\\"{{rol.id}}\\\" value=\\\"{{rol.id}}\\\" [(ngModel)]=\\\"rol.rolBelongUser\\\" />\\n                        <label class=\\\"navarStyle\\\" style=\\\"text-transform: capitalize; padding-left: 5px;font-size: 11px;\\\" for=\\\"exampleCheck1\\\">{{rol.name}}</label>\\n                    </div>   \\n                </li>  \\n            </div>\\n        </div> \\n\\n        <div  style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.phoneNumber\\\" required #PhoneNumber=\\\"ngModel\\\" name=\\\"phoneNumber\\\"\\n                type=\\\"text\\\" placeholder=\\\"Telefóno\\\" value=\\\"\\\">\\n        </div>\\n\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"PhoneNumber.dirty && PhoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Telefóno Incorrecto\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success navarStyle\\\" [disabled]=\\\"!userForm.form.valid\\\">Guardar</button>\\n            <a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/users\\\">atrás</a>\\n        </div>\\n    </form>\\n    \\n    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"userForm.form.invalid\\\" class=\\\"alert alert-danger\\\">\\n        Hay Campos erroneos en el formulario, verifiquelos\\n    </div>\\n\\n    <div>\\n        <ul style=\\\"margin-top : 15px;\\\" *ngIf=\\\"errors.length != 0\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            <li *ngFor=\\\"let error of errors\\\">{{ error.value }}</li>\\n        </ul>\\n    </div>\\n</div>\\n\\n\"","import { UserService } from './../../_services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { createUser } from '../users'\nimport { RoleService } from '../../_services/role.service';\n@Component({\n  selector: 'app-createuser',\n  templateUrl: './createuser.component.html',\n  styleUrls: ['./createuser.component.css']\n})\nexport class CreateuserComponent implements OnInit {\n\n  constructor(private UserService : UserService, private rolService : RoleService) {}\n  model = new createUser();\n  errors = [];\n\n\n  addUser(){\n    console.log(this.model);\n    \n    this.UserService.createWithObjectUser(this.model).subscribe(\n      data => {\n          console.log(\"POST Request is successful \", data);\n      },\n        error => {\n          this.errors = error.error.notifications;\n     } \n  );;\n  }\n\n  getAllRoles(){\n    this.rolService.getAll().subscribe(\n      rol => this.model.rolesUser = rol\n    );\n  }\n  onSubmit(){\n    this.addUser();\n  }\n  \n  ngOnInit() {\n    this.getAllRoles();\n  }\n\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n  \\r\\n.ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n  \\r\\n.navarStyle {\\r\\n    font-size : 13px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    padding-top: 1px;\\r\\n  }\\r\\n  \\r\\ninput{\\r\\nfont-size : 13px;\\r\\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;  \\r\\n}\"","module.exports = \"<div class=\\\"container col-4 navarStyle\\\">\\n    <h2>Modificar</h2>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n        \\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.dni\\\" #Dni=\\\"ngModel\\\" required name=\\\"Dni\\\" id=\\\"Dni\\\" type=\\\"number\\\"\\n                placeholder=\\\"Dni\\\">\\n        </div>\\n\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Dni.invalid\\\" clas=\\\"alert alert-danger\\\">\\n            Dni Incorrecto\\n        </div>\\n\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.userName\\\" required #Usuario=\\\"ngModel\\\" name=\\\"Usuario\\\" type=\\\"text\\\"\\n                placeholder=\\\"Username\\\" value=\\\"\\\">\\n        </div>\\n\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Usuario.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Usuario Incorrecto\\n        </div>\\n\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.password\\\" #Usuario=\\\"ngModel\\\" name=\\\"Password\\\" type=\\\"password\\\"\\n                placeholder=\\\"Nueva Contraseña\\\" value=\\\"\\\">\\n        </div>\\n\\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && Password.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Contraseña Incorrecta\\n        </div>\\n\\n        <div class=\\\"form-group\\\" style=\\\"margin-bottom : 0px;\\\">\\n            <div class=\\\"row\\\">\\n                <li *ngFor=\\\"let rol of model.rolesUser\\\" style=\\\"list-style:none\\\">\\n                    <div class=\\\"col\\\">\\n                        <input type=\\\"checkbox\\\" name=\\\"{{rol.id}}\\\" value=\\\"{{rol.id}}\\\" [(ngModel)]=\\\"rol.rolBelongUser\\\" />\\n                        <label class=\\\"navarStyle\\\" style=\\\"text-transform: capitalize; padding-left: 5px;font-size: 11px;\\\" for=\\\"exampleCheck1\\\">{{rol.name}}</label>\\n                    </div>\\n                </li>\\n            </div>\\n        </div> \\n\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"model.phoneNumber\\\" required #PhoneNumber=\\\"ngModel\\\" name=\\\"phoneNumber\\\"\\n                type=\\\"text\\\" placeholder=\\\"Telefóno\\\" value=\\\"\\\">\\n        </div>\\n        \\n        <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"submitted && PhoneNumber.invalid\\\" class=\\\"alert alert-danger\\\">\\n            Telefóno Incorrecto\\n        </div>\\n\\n        <div style=\\\"margin-bottom:5px;\\\" class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-success navarStyle\\\" [disabled]=\\\"!userForm.form.valid\\\">Guardar</button>\\n            <a style=\\\"margin-left : 5px;\\\" class=\\\"btn btn-primary navarStyle\\\" href=\\\"\\\" routerLink=\\\"/users\\\">atrás</a>\\n        </div>\\n\\n    </form>\\n    <div style=\\\"margin-top: 10px;\\\" *ngIf=\\\"userForm.form.invalid\\\">\\n        Hay Campos erroneos en el formulario, verifiquelos\\n    </div>\\n</div>\"","import { UsersComponent } from './../users.component';\nimport { async } from '@angular/core/testing';\nimport { map } from 'rxjs/operators';\nimport { UserService } from './../../_services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User, modifyUser } from '../users';\n\n\n@Component({\n  selector: 'app-modifyuser',\n  templateUrl: './modifyuser.component.html',\n  styleUrls: ['./modifyuser.component.css']\n})\nexport class ModifyuserComponent implements OnInit {\n\n  id: number;\n\n  constructor(private router : Router, private http: HttpClient, private route: ActivatedRoute, private userService: UserService) {\n  }\n  model = new modifyUser;\n  \n\n  onChange(rol){\n    console.log(rol.rolBelongUser);\n  }\n   onSubmit() {\n    this.model.id = this.id;\n    this.userService.updateUsers(this.model).subscribe(\n      result => {\n        this.router.navigate(['/users']);\n      },\n        error => {\n         // this.errors = error.error.notifications;\n        }      \n    );\n    this.router.navigate([UsersComponent]);\n  }\n  ngOnInit() {\n    //le asigno el id que extraigo de la url\n    this.route.params.subscribe(\n      p => this.id = p.id\n    );\n\n    this.userService.getById(this.id).subscribe(i => {\n        this.model.dni = i.dni,\n        this.model.userName = i.userName,\n        this.model.id = i.id,\n        this.model.phoneNumber = i.phoneNumber,\n        this.model.rolesUser = i.rolesUser;\n    })\n\n  }\n}\n","module.exports = \"@import url('https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css');\\r\\n.navarStyle {\\r\\n    font-size : 13px;\\r\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    padding-top: 1px;\\r\\n  }\"","module.exports = \"<a href=\\\"\\\" class=\\\"btn btn-success navarStyle\\\" routerLink=\\\"create\\\"><fa-icon icon=\\\"user-plus\\\"></fa-icon></a>\\n<table class=\\\"table table-hover\\\" style=\\\"margin-top : 5px;margin-right: 25px;\\\">\\n\\t<thead>\\n\\t\\t<tr style=\\\"font-weight: bold;\\\">\\n\\t\\t\\t<td>Dni</td><td>Usuario</td><td>Accción<td>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t<tr *ngFor=\\\"let user of user_list\\\">\\n\\t\\t<td style=\\\"width : 0px;\\\" class=\\\"col-lg\\\" >{{user.dni}}</td>\\n\\t\\t<td style=\\\"width : 0px;\\\" class=\\\"col-lg\\\">{{user.userName}}</td>\\n\\t\\t<td style=\\\"width : 0px; margin: 5px;\\\" class=\\\"col-lg\\\">\\n\\t\\t<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n\\t\\t\\t<button type=\\\"button\\\" routerLink=\\\"/update/{{user.id}}\\\" class=\\\"btn btn-default navarStyle\\\"><fa-icon icon=\\\"edit\\\"></fa-icon></button>\\n\\t\\t\\t<button type=\\\"button\\\" routerLink=\\\"/users\\\" (click)=\\\"openEliminar(user.id,user.dni,user.userName)\\\" class=\\\"btn btn-danger navarStyle\\\"><fa-icon icon=\\\"trash\\\"></fa-icon></button>\\n\\t\\t</div>\\n\\t\\t</td>\\n\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<ngb-pagination (pageChange)=\\\"loadPage($event)\\\" [collectionSize]=\\\"col_size\\\" [pageSize]=\\\"itemsPerPage\\\" [(page)]=\\\"page\\\" aria-label=\\\"Default pagination\\\"></ngb-pagination>\\n\\n\\n\\n\\n\\n\"","import { Roles, RoleUserDto } from './../_models/roles';\nimport { NgbdModalContent } from './../modals/modals.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { User } from './users';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\n\nexport class UsersComponent implements OnInit {\n  page = 0;\n  user_list: User[];\n  roles_list : Roles;\n  col_size : number;\n  itemsPerPage : number = 10;\n  value : number;\n\n  \n\n  changeRolDto = new RoleUserDto();\n  \n  constructor(private var_user_service: UserService, private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.getAllUsers(this.page);\n  }\n\n  loadPage(page : number){\n  if (page != 0){\n    this.getAllUsers(page-1);\n  }\n     \n  }\n  getAllUsers(page : number): void {\n    this.var_user_service.getPaginator(page).subscribe(result => {\n      this.user_list = result.list\n      this.col_size = result.totalRecords\n      \n  });\n \n  }\n  //MODALS\n  openEliminar(id: number, dni: number, usuario: string) {\n    const modalRef = this.modalService.open(NgbdModalContent);\n    modalRef.componentInstance.Encabezado = \"Eliminar\";\n    modalRef.componentInstance.Contenido = \"¿Desea eliminar a \" + dni + \" \" + usuario + \"?\";\n    modalRef.componentInstance.GuardaroEliminar = \"Eliminar\";\n    modalRef.result.then(() => {\n      this.var_user_service.deleteUser(id).subscribe(\n        data => {\n            this.getAllUsers(this.page);\n        },\n        error => {\n            console.log(\"error\", error);\n        }\n    );;\n    },\n      () => {\n        console.log('Backdrop click');\n    })\n  }\n\n}\n","export class User{\r\n  id : number;\r\n  dni: number;\r\n  userName : string;\r\n  phoneNumber : string;\r\n  password : string;\r\n}\r\n\r\nexport class rolesBelongUser{\r\n  id : number;\r\n  name : string;\r\n  rolBelongUser : string;\r\n}\r\nexport class modifyUser extends User{\r\n  rolesUser : rolesBelongUser[];\r\n}\r\n\r\nexport class createUser extends modifyUser{\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}